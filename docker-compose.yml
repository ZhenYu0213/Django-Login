 version: "3.8"
 
 volumes: #/var/lib/docker/volumeså†…
  myproject_db_vol: 
  myproject_redis_vol: 
  myproject_media_vol: 
 services:
  redis:
    image: redis:5
    command: redis-server /etc/redis/redis.conf
    volumes:
       - myproject_redis_vol:/data
       - ./compose/redis/redis.conf:/etc/redis/redis.conf
    ports:
       - "6379:6379"
    restart: always
  db:
    image: mysql:8.0.32
    environment:
       - MYSQL_ROOT_PASSWORD=test
       - MYSQL_DATABASE=db
       - MYSQL_USER=test
       - MYSQL_PASSWORD=test
    volumes:
       - myproject_db_vol:/var/lib/mysql:rw
       - ./compose/mysql/conf/my.cnf:/etc/mysql/my.cnf
       - ./compose/mysql/init:/docker-entrypoint-initdb.d/
    ports:
       - "3306:3306"
    restart: always
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on: 
      - db
  web:
    build: .
    expose:
       - "8000"
    volumes:
       - .:/var/www/html/myproject
       - myproject_media_vol:/var/www/html/myproject/media
       - ./compose/uwsgi:/tmp
    links:
       - db
       - redis
    depends_on:
       - db
       - redis
    environment:
       - DEBUG=False
    restart: always
    tty: true
    stdin_open: true
 
  nginx:
    build: ./compose/nginx
    ports:
       - "80:80"
       - "443:443"
    expose:
       - "80"
    volumes:
       - ./myproject/static:/usr/share/nginx/html/static
       #- ./compose/nginx/ssl:/usr/share/nginx/ssl
       - ./compose/nginx/log:/var/log/nginx
       - myproject_media_vol:/usr/share/nginx/html/media 
    links:
       - web
    depends_on:
       - web
    restart: always